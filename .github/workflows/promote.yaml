name: Promote Image

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: application name
        required: true
      lower_environment:
        description: lower environment
        required: true
      higher_environment:
        description: higher environment
        required: true

jobs:
  promote-image-tag:
    runs-on: ubuntu-latest
    env:
      HIGH_ENV: ${{ inputs.higher_environment }}
      LOW_ENV: ${{ inputs.lower_environment }}
      APP_NAME: ${{ inputs.app_name }}
    steps:  
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPOSITORY_TOKEN }}

    - name: Get Image Tag
      uses: mikefarah/yq@master
      with:
        cmd: echo "IMAGE_TAG=$(yq eval '.image.tag' 'apps/${{ env.APP_NAME }}/environments/${{ env.LOW_ENV }}-values.yaml')" >> $GITHUB_ENV

    - name: Update Helm values file
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.image.tag = "${{ env.IMAGE_TAG }}"' -i "apps/${{ env.APP_NAME }}/environments/${{ env.HIGH_ENV }}-values.yaml"
      
    - name: Prepare image tag for prod
      uses: mikefarah/yq@master
      if: ${{ env.HIGH_ENV == 'pprod' }}
      with:
        cmd: yq eval '.image.tag = "${{ env.IMAGE_TAG }}"' -i "apps/${{ env.APP_NAME }}/environments/prod-values.yaml"

    - name: Commit and push changes
      run: |
        git config user.email ${{ secrets.REPOSITORY_EMAIL }}
        git config user.name ${{ secrets.REPOSITORY_USER }}
        git add .
        git commit -m "Promote new version to ${{ env.HIGH_ENV }} environment from ${{ env.LOW_ENV }}"
        git push https://${{ secrets.REPOSITORY_TOKEN }}@github.com/BENMALEKarim/helm-charts.git

  promote-argocd:
    needs: promote-image-tag
    runs-on: ubuntu-latest
    env:
      HIGH_ENV: ${{ inputs.higher_environment }}
      APP_NAME: ${{ inputs.app_name }}

    steps:  
    - name: Clone my Helm repository
      run: |
        git clone --branch main https://github.com/BENMALEKarim/argocd-apps.git

    - name: Update Argocd Target Revision for current release
      uses: mikefarah/yq@master
      if: startsWith(env.HIGH_ENV, 'c')
      with:
        cmd: |
          yq eval '.spec.source.targetRevision = "master"' -i argocd-apps/argocd/${{ env.APP_NAME }}-${{ env.HIGH_ENV }}.yaml

    - name: Update Argocd Target Revision for pprod
      uses: mikefarah/yq@master
      if: ${{ env.HIGH_ENV == 'pprod' }}
      with:
        cmd: |
          yq eval '.spec.source.targetRevision = "master"' -i argocd-apps/argocd/${{ env.APP_NAME }}-${{ env.HIGH_ENV }}.yaml

    - name: Update Argocd Target Revision for next release
      uses: mikefarah/yq@master
      if: startsWith(env.HIGH_ENV, 'n')
      with:
        cmd: |
          yq eval '.spec.source.targetRevision = "develop"' -i argocd-apps/argocd/${{ env.APP_NAME }}-${{ env.HIGH_ENV }}.yaml

    - name: Commit and push changes
      run: |
        cd argocd-apps
        git config user.email ${{ secrets.REPOSITORY_EMAIL }}
        git config user.name ${{ secrets.REPOSITORY_USER }}
        git add .
        git commit -m "Update target revision"
        git push https://${{ secrets.REPOSITORY_TOKEN }}@github.com/BENMALEKarim/argocd-apps.git